@page "/medical-transcription"
@using AIChat.Services
@inject AudioTranscriptionService TranscriptionService

@rendermode InteractiveServer

<h3 class="speech-title">Medical Transcription</h3>

<div class="speech-container">
    <div class="speech-row">
        <InputFile OnChange="OnFileChange" accept=".wav,.mp3" MaxFileSize="10485760" />
    </div>
    <div class="speech-row">
        <label class="speech-label"><b>Transcription Result:</b></label>
        <span>@transcription</span>
    </div>
    @if (isLoading)
    {
        <div class="speech-row">
            <p><em>Transcribing...</em></p>
        </div>
    }
</div>

<style>
.speech-container {
    max-width: 600px;
    margin: auto;
    padding: 20px;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    display: flex;
    flex-direction: column;
    gap: 18px;
}
.speech-title {
    text-align: center;
    color: #0d6efd;
    font-size: 1.7rem;
    font-weight: bold;
    margin-bottom: 24px;
}
.speech-row {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 10px;
}
.speech-label {
    font-weight: 500;
    color: #0d6efd;
    margin-right: 8px;
}
</style>

@code {
    private string transcription = "";
    private bool isLoading = false;

    private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        isLoading = true;
        var file = e.File;
        await using var stream = file.OpenReadStream(10 * 1024 * 1024);
        transcription = await TranscriptionService.TranscribeAudioAsync(stream, file.Name);
        isLoading = false;
    }
}
